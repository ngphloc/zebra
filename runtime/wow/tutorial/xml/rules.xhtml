<!DOCTYPE html SYSTEM "/wow/WOWstandard/xhtml-wowext-1.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<object data="../header.xhtml" type="text/wow">
<p>
<b>Warning:</b>
If you see this text it means you are not viewing the page through
the WOW! system.
</p>
</object>

<h2>Event-Condition-Action Rules</h2>

<p>
The updates to
<a href="concepts" class="conditional">attributes of concepts</a>
in the <a href="usermodel" class="conditional">user model</a> are done through
<em>event-condition-action rules</em>.
Every rule is associated with an attribute of a concept, and is
"triggered" whenever the value of that attribute changes.
Every page has an <em>access</em> attribute which is (virtually) "changed"
whenever the end-user visits that page.
This triggers the rules associated with this attribute.
Every rule consists of the following parts:
</p>
<ul>
<li>
<em>condition</em>: When the rule is triggered the condition is evaluated.
It is an expression just like the ones for the
<a href="fragments" class="conditional">conditional inclusion
of fragments</a>.
The condition is Boolean, but an integer expression is allowed and
the result interpreted as Boolean. (0 is false, any other value is true.)
</li>
<li>
<em>true-actions</em>: When the condition is true this set of
actions is executed. Each action is an assignment,
in which an attribute of a concept is assigned the result
of an expression using attributes of concepts and constants.
The expression may also use the attribute to which the
event-condition-action rule belongs, preceded by an underscore (_).
This means that instead of the value of that attribute the
change of the attribute value (triggering the rule) is used.
An example:
<pre>
tutorial.enduser.knowledge :=
   tutorial.enduser.knowledge + 0.3 * _tutorial.usermodel.knowledge
</pre>
Such a rule can only be associated with
the <tt>knowledge</tt> attribute of <tt>tutorial.usermodel</tt>,
and adds 30% of the change to this attribute to
the <tt>knowledge</tt> attribute of <tt>tutorial.enduser</tt>.
Actions that use only attributes (without underscore to refer to
an attribute update) need not use the attribute to which the rule belongs.
</li>
<li>
<em>false-actions</em>: When the condition is false this set of
actions is executed. The actions are just like the
<em>true-actions</em>.
</li>
<li>
<em>propagation</em>: When a rule is executed it updates
some attribute(s) of some concept(s).
The <em>propagation</em> field indicates whether these updates
will trigger the rules associted with the updated attribute(s).
Setting the <em>propagation</em> field to false when possible is
a good way to avoid inadverted infinite loops caused by rules that
trigger each other repeatedly.
</li>
</ul>
<p>
Below is an example of a rule, taken from some older version of this tutorial.
This rule could is generated by the
<a href="graphauthor" class="conditional">Graph Author tool</a>
and is in the format used by the
<a href="concepteditor" class="conditional">Concept Editor</a>.
<pre>
    &lt;generateListItem isPropagating="true" &gt;
      &lt;requirement&gt;! tutorial.readme.suitability &amp;amp;&amp;amp; tutorial.readme.knowledge &amp;lt; 35&lt;/requirement&gt;
      &lt;trueActions&gt;
       &lt;action&gt;
        &lt;conceptName&gt;tutorial.readme&lt;/conceptName&gt;
        &lt;attributeName&gt;knowledge&lt;/attributeName&gt;
        &lt;expression&gt;35&lt;/expression&gt;
       &lt;/action&gt;
       &lt;action&gt;
        &lt;conceptName&gt;tutorial.tutorial&lt;/conceptName&gt;
        &lt;attributeName&gt;knowledge&lt;/attributeName&gt;
        &lt;expression&gt;tutorial.tutorial.knowledge + (0.1 * _tutorial.readme.knowledge)&lt;/expression&gt;
       &lt;/action&gt;
       &lt;action&gt;
        &lt;conceptName&gt;tutorial.readme&lt;/conceptName&gt;
        &lt;attributeName&gt;visited&lt;/attributeName&gt;
        &lt;expression&gt;100&lt;/expression&gt;
       &lt;/action&gt;
      &lt;/trueActions&gt;
    &lt;/generateListItem&gt;
</pre>
</p>

<object data="../footer.xhtml" type="text/wow">
<p>
<b>Warning:</b>
If you see this text it means you are not viewing the page through
the WOW! system.
</p>
</object>
</html>
