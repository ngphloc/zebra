/*


    This file is part of WOW! based on AHA! (Adaptive Hypermedia for All) which is free software (GNU General Public License) developed by Paul De Bra - Eindhoven University of Technology and University

    WOW! is also open source software; 


*/
/**
 * KnowledgeChange.java 1.0, June 1, 2008
 *
 *Copyright (c) 2006 by Eindhoven University of Technology and modified by University of Science, 2008, Vietnam.
 * All Rights Reserved.
 *
 * This software is proprietary information of Eindhoven University of Technology and University
 * of Science. It may be used according to the GNU license of Eindhoven University of Technology
 */

package vn.spring.WOW.engine;

import vn.spring.WOW.exceptions.*;
import vn.spring.WOW.datacomponents.*;
import vn.spring.WOW.WOWStatic;
import vn.spring.WOW.Utils.*;
import java.io.*;

import java.util.*;

import java.util.Hashtable;
import java.util.Enumeration;
import java.io.InputStream;


/**
 * The class KnowledgeChange reads the input that the user gave
 * in the Change Knowledge Form, and processes it.
 */

public class KnowledgeChange {

    public Profile profile;
    private String login;
    public String course;
    private StringBuffer sb;
    private Hashtable values;

    public Resource getOutput(Profile profile, String login, String course, Map params) {

        this.profile = profile;
        this.login = login;
        this.course = course;
        sb = new StringBuffer();
        values = profile.getValues();
        try {
            // Read the form input fields
            CgiUtil Util = new CgiUtil(params);
            // Process the form input fields, and adapt the knowledge
            changeKnowledge(sb, Util, profile);
            WOWStatic.DB().getProfileDB().setProfile(profile.id, profile);
        } catch (Exception e) {
        System.out.println("KnowledgeChange Error: "+e.toString());
        }
        InputStream insb = new ByteArrayInputStream(sb.toString().getBytes());
        return new Resource(insb, new ResourceType("text/html"));
    }


  /**
   * This method reads input from a POST request and replaces the user model
   * by the values contained in the request.
   * The form for this POST request is supposed to be the one generated by
   * the "genConfig" method.
   */
  public StringBuffer changeKnowledge(StringBuffer sb, CgiUtil Util, Profile profile) throws DatabaseException, InvalidProfileException, InvalidConceptException, InvalidAttributeException {

    boolean ok=true;
    for (Enumeration e = Util.keys(); e.hasMoreElements(); ) {
        String attribute = (String)e.nextElement();
        String value = (String)Util.get(attribute);
        if (attribute.startsWith("KNOW_")) {
            String concept = attribute.substring(5);
            int p=0;
            try {
                p = Integer.parseInt(value);
            } catch (NumberFormatException nfe) {
                ok = false;
                break;
                // value is not a number
            }
            if (ok && 0<=p && p<=100) {
                if (!values.containsKey(concept+".knowledge")) {
                    AttributeValue attributeValue = new AttributeValue(true);
                    attributeValue.setValue(value);
                    values.put(concept+".knowledge", attributeValue);
                } else profile.setAttributeValue(concept,"knowledge", value);
            }
        }
    }
    if (ok) {
        // The header generation is "borrowed" from XMLHandler
        sb.append("<html><body>");

        sb.append("<h2>Configuration Setup for " + login + " has been updated.</h2>\n");
        sb.append("<p>You can now go back and continue reading using the updated setup.</p>\n");
        sb.append("</body>\n</html>\n");
    } else sb.append("<h3> Error updating the profile for: " + login + "</h3><br>Please, check that you have entered an integer value for <b>knowledge</b> attribute!");
    return sb;
  }

}