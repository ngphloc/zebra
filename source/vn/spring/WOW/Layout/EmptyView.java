/*


    This file is part of WOW! based on AHA! (Adaptive Hypermedia for All) which is free software (GNU General Public License) developed by Paul De Bra - Eindhoven University of Technology and University

    WOW! is also open source software; 


*/
/**
 * EmptyView.java 1.0, August 30, 2008
 *
 *Copyright (c) 2006 by Eindhoven University of Technology and modified by University of Science, 2008. All Rights Reserved.
 *
 * This software is proprietary information of Eindhoven University of Technology and University
 * of Science. It may be used according to the GNU license of Eindhoven University of Technology
 */

package vn.spring.WOW.Layout;

import java.io.*;
import java.util.*;

import vn.spring.WOW.exceptions.*;
import vn.spring.WOW.datacomponents.*;
import vn.spring.WOW.WOWStatic;


/**
 * Table Of Contest View
 */
public class EmptyView implements View {



  final static private String viewType="EMPTYVIEW";
  final static private boolean stat=false;

  private String viewName=null;
  private String title=null;
  private String background=null;
  private String mime="text/html";
  public  String initParams=null;   //view specific params from view.xml file

  private SecWndLinks secWndLinks=null;



//=============================================================

  //Constructor
  public EmptyView(String name,String bg,String params,String title,SecWndLinks swls){
    this.viewName=name;
    this.background=bg;
    this.initParams=params;
    this.title=title;

    this.secWndLinks=swls;

  }

  public EmptyView(){

 }

  public void setSecWndLinks(SecWndLinks swl){
    this.secWndLinks=swl;
  }

  public void setViewName(String name){
    this.viewName=name;
  }

  public void setBackgound(String back){
    this.background=back;
  }

  public void setParams(String params){
    this.initParams=params;
  }

  public void setTitle(String title){
    this.title=title;
  }




  /**
    * returns secWndLInks table
    */
   public SecWndLinks getSecWndLinks(){
     return this.secWndLinks;
   }


  /**
  * returns returns true is view needs to be updated when MAIN updated
  */
   public boolean isStatic(){
      return EmptyView.stat;
   }


  /**
   * returns the view with name viewName
   */
   public String getViewName(){
     return viewName;
   }

  /**
  * returns the viewtype of this view(TOCVIEW)
  */
   public String getViewType(){
     return viewType;
   }

  /**
  * returns the Mime type of the response generated by the view
  */
  public String getMime(){
    return this.mime;
  }


 /**
 * generates the the Browers code(HTML/XHTML) for this view
 */
    public InputStream genBrsCode(String conceptname, Profile profile, Map params){

      //Construct HTML code for the menu output file
      StringBuffer outstr = new StringBuffer();
      String directory = null;
        try {
        directory = profile.getAttributeValue("personal","directory");
        } catch (InvalidAttributeException iae) {System.out.println(iae);}
      String contextpath=WOWStatic.config.Get("CONTEXTPATH");
      outstr.append("<html><head>");
      outstr.append("<meta http-equiv='Cache-Control' content='no-cache' />\n<meta http-equiv='Expires' content='-1' />\n<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />");
      outstr.append("<title>"+this.title+"</title></head><body background='"+contextpath+"/"+directory+"/"+background+"'>\n\n");


      outstr.append("</body></html>");

      //Convert output to inputstream(needed by the servlet)
      InputStream insb = new ByteArrayInputStream(outstr.toString().getBytes());

      return insb;
    }


}
