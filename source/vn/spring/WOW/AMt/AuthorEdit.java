/*
 * AuthorEdit.java
 *
 * Created on 14 december 2008, 17:43
 */

package vn.spring.WOW.AMt;

import java.awt.*;
import javax.swing.JOptionPane;

/**
 *
 * @author  T.J. Dekker, changed by Loc Nguyen
 */
public class AuthorEdit extends javax.swing.JDialog {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/** Creates new form AuthorEdit */
    public AuthorEdit(String aauthorname, AMtClient aclient, java.awt.Frame parent, boolean modal) {
      super(parent, modal);
      FAuthorName = aauthorname;
      AMt = aclient;
      initComponents();

      //fill info labels
      lblLoginV.setText(aauthorname);
      edtName.setText(AMt.getName());

      //set location
      int w = 250;
      int h = 250;
      Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
      setLocation(screenSize.width/2 - w/2, screenSize.height/2 - h/2);
      setSize(w, h);
      setTitle("Author Profile");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        pnlContents = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        pnlFields = new javax.swing.JPanel();
        lblLogin = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        lblPassR = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblLoginV = new javax.swing.JLabel();
        pwfPass = new javax.swing.JPasswordField();
        pwfPassR = new javax.swing.JPasswordField();
        edtName = new javax.swing.JTextField();
        pnlButtons = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        ponlEmpty = new javax.swing.JPanel();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.X_AXIS));

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        pnlContents.setLayout(new java.awt.GridBagLayout());

        pnlContents.setBackground(new java.awt.Color(255, 255, 255));
        pnlContents.setMinimumSize(new java.awt.Dimension(250, 250));
        pnlContents.setPreferredSize(new java.awt.Dimension(250, 250));
        lblTitle.setFont(new java.awt.Font("Dialog", 1, 18));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Author Profile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 5;
        pnlContents.add(lblTitle, gridBagConstraints);

        pnlFields.setLayout(new java.awt.GridBagLayout());

        pnlFields.setBackground(new java.awt.Color(255, 255, 255));
        lblLogin.setFont(new java.awt.Font("Dialog", 0, 12));
        lblLogin.setText("Login:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        pnlFields.add(lblLogin, gridBagConstraints);

        lblPass.setFont(new java.awt.Font("Dialog", 0, 12));
        lblPass.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        pnlFields.add(lblPass, gridBagConstraints);

        lblPassR.setFont(new java.awt.Font("Dialog", 0, 12));
        lblPassR.setText("Password (verify):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        pnlFields.add(lblPassR, gridBagConstraints);

        lblName.setFont(new java.awt.Font("Dialog", 0, 12));
        lblName.setText("Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlFields.add(lblName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        pnlFields.add(lblLoginV, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        pnlFields.add(pwfPass, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        pnlFields.add(pwfPassR, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlFields.add(edtName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        pnlContents.add(pnlFields, gridBagConstraints);

        pnlButtons.setLayout(new java.awt.GridBagLayout());

        pnlButtons.setBackground(new java.awt.Color(255, 255, 255));
        btnSave.setFont(new java.awt.Font("Dialog", 0, 12));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlButtons.add(btnSave, gridBagConstraints);

        btnClose.setFont(new java.awt.Font("Dialog", 0, 12));
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        pnlButtons.add(btnClose, gridBagConstraints);

        ponlEmpty.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.weightx = 1.0;
        pnlButtons.add(ponlEmpty, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        pnlContents.add(pnlButtons, gridBagConstraints);

        getContentPane().add(pnlContents);

        pack();
    }//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
      closeDialog(null);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
      if (!new String(pwfPass.getPassword()).equals(new String(pwfPassR.getPassword()))) {
        showError(AMtc.ERROR_PASSWORDS_DO_NOT_MATCH); return;
      }

      int result = AMt.changeProfile(FAuthorName, new String(pwfPass.getPassword()), edtName.getText());
      showError(result);
    }//GEN-LAST:event_btnSaveActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
     * Shows a JOptionPane error dialog box with the specified error. The
     * parent of the dialog box is the parent of this dialog. No Error is shown
     * when the error code equals <code>AMtc.NO_ERRORS</code> or
     * <code>AMtc.ERROR_USER_ABORTED</code>.
     * @param error An error code, see the error code listing in {@link AMtc}
     * for all possible error codes.
     */
    public void showError(int error) {
      if ((error == AMtc.NO_ERRORS) || (error == AMtc.ERROR_USER_ABORTED)) {
        JOptionPane.showMessageDialog(getParent(), AMtc.MESSAGE_SAVE_SUCCESSFUL,
        AMtc.MESSAGE_HEADER_INFO, JOptionPane.INFORMATION_MESSAGE);
        return;
      }
      else
        JOptionPane.showMessageDialog(getParent(), AMtc.getErrorMsg(error),
        AMtc.MESSAGE_HEADER_ERROR, JOptionPane.ERROR_MESSAGE);
    }

    private String FAuthorName;
    private AMtClient AMt;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSave;
    private javax.swing.JTextField edtName;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblLoginV;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblPassR;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlContents;
    private javax.swing.JPanel pnlFields;
    private javax.swing.JPanel ponlEmpty;
    private javax.swing.JPasswordField pwfPass;
    private javax.swing.JPasswordField pwfPassR;
    // End of variables declaration//GEN-END:variables

}