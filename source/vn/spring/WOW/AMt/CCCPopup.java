//------------------------------------------------------------------------------
// Unit Name: CCCPopup.java
// Author: T.J. Dekker, reviewed and modified by Loc Nguyen
// Date of Creation: 06-10-2008
// Purpose: Concept Consistency Check GUI popup frame containing a CCC for an
//          WOW! application.
//
// DOCUMENT CHANGES
//
// Date:           Author:             Change:
// -----------------------------------------------------------------------------
// 06-10-2008      T.J. Dekker         Creation
//------------------------------------------------------------------------------

package vn.spring.WOW.AMt;

import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;

import java.util.Vector;

import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * Concept Consistency Check GUI popup frame containing a CCC for an WOW!
 * application.
 * @author  T.J. Dekker, changed by Loc Nguyen
 * @version 1.0.0
 */
public class CCCPopup extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form CCCPopup
     * @param plistener the interfacelistener
     * @param authorname name of an author
     * @param appname the name of the application of the CCC
     */
    public CCCPopup(TCCCPopupInterface plistener, String authorname,
                                                               String appname) {
      listener = plistener;
      FAuthorName = authorname;
      FAppName = appname;
      initComponents();
      postInitComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        pnlContents = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblAppName = new javax.swing.JLabel();
        pnlStatus = new javax.swing.JPanel();
        lblIcon = new javax.swing.JLabel();
        lblIconText = new javax.swing.JLabel();
        btnGaf = new javax.swing.JButton();
        btnBif = new javax.swing.JButton();
        btnWow = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        pnlReport = new javax.swing.JPanel();
        spnReport = new javax.swing.JScrollPane();
        pnlClose = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.CardLayout());

        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pnlContents.setLayout(new java.awt.GridBagLayout());

        pnlContents.setBackground(new java.awt.Color(255, 255, 255));
        pnlTitle.setLayout(new java.awt.GridBagLayout());

        pnlTitle.setBackground(new java.awt.Color(255, 255, 255));
        pnlTitle.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        pnlTitle.setMinimumSize(new java.awt.Dimension(386, 30));
        pnlTitle.setPreferredSize(new java.awt.Dimension(386, 30));
        lblTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblTitle.setFont(new java.awt.Font("Dialog", 1, 14));
        lblTitle.setText("Concept Consistency Check Report for Application:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        pnlTitle.add(lblTitle, gridBagConstraints);

        lblAppName.setBackground(new java.awt.Color(255, 255, 255));
        lblAppName.setFont(new java.awt.Font("Dialog", 1, 14));
        lblAppName.setText("App");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        pnlTitle.add(lblAppName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        pnlContents.add(pnlTitle, gridBagConstraints);

        pnlStatus.setLayout(new java.awt.GridBagLayout());

        pnlStatus.setBackground(new java.awt.Color(255, 255, 255));
        lblIcon.setMaximumSize(new java.awt.Dimension(50, 50));
        lblIcon.setMinimumSize(new java.awt.Dimension(50, 50));
        lblIcon.setPreferredSize(new java.awt.Dimension(50, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlStatus.add(lblIcon, gridBagConstraints);

        lblIconText.setText("All resource links are valid.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlStatus.add(lblIconText, gridBagConstraints);

        btnGaf.setFont(new java.awt.Font("Dialog", 0, 12));
        btnGaf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/spring/WOW/AMt/pics/gaffile.png")));
        btnGaf.setToolTipText("Open with Graph Authoring Tool");
        btnGaf.setMaximumSize(new java.awt.Dimension(30, 30));
        btnGaf.setMinimumSize(new java.awt.Dimension(30, 30));
        btnGaf.setPreferredSize(new java.awt.Dimension(30, 30));
        btnGaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGafActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 3);
        pnlStatus.add(btnGaf, gridBagConstraints);

        btnBif.setFont(new java.awt.Font("Dialog", 0, 12));
        btnBif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/spring/WOW/AMt/pics/biffile.png")));
        btnBif.setToolTipText("Open with Bayes Authoring Tool");
        btnBif.setMaximumSize(new java.awt.Dimension(30, 30));
        btnBif.setMinimumSize(new java.awt.Dimension(30, 30));
        btnBif.setPreferredSize(new java.awt.Dimension(30, 30));
        btnBif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBifActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 3);
        pnlStatus.add(btnBif, gridBagConstraints);

        btnWow.setFont(new java.awt.Font("Dialog", 0, 12));
        btnWow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/spring/WOW/AMt/pics/wowfile.png")));
        btnWow.setToolTipText("Open with Concept Editor");
        btnWow.setMaximumSize(new java.awt.Dimension(30, 30));
        btnWow.setMinimumSize(new java.awt.Dimension(30, 30));
        btnWow.setPreferredSize(new java.awt.Dimension(30, 30));
        btnWow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWowActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 10);
        pnlStatus.add(btnWow, gridBagConstraints);

        btnRefresh.setFont(new java.awt.Font("Dialog", 0, 12));
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/spring/WOW/AMt/pics/refresh.png")));
        btnRefresh.setToolTipText("Refresh");
        btnRefresh.setMaximumSize(new java.awt.Dimension(30, 30));
        btnRefresh.setMinimumSize(new java.awt.Dimension(30, 30));
        btnRefresh.setPreferredSize(new java.awt.Dimension(30, 30));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        pnlStatus.add(btnRefresh, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        pnlContents.add(pnlStatus, gridBagConstraints);

        pnlReport.setLayout(new java.awt.GridBagLayout());

        pnlReport.setBackground(new java.awt.Color(255, 255, 255));
        spnReport.setBackground(new java.awt.Color(255, 255, 255));
        spnReport.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlReport.add(spnReport, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        pnlContents.add(pnlReport, gridBagConstraints);

        pnlClose.setLayout(new java.awt.BorderLayout());

        pnlClose.setBackground(new java.awt.Color(255, 255, 255));
        pnlClose.setMaximumSize(new java.awt.Dimension(40, 40));
        pnlClose.setMinimumSize(new java.awt.Dimension(40, 40));
        pnlClose.setPreferredSize(new java.awt.Dimension(40, 40));
        btnClose.setText("Close");
        btnClose.setMaximumSize(new java.awt.Dimension(80, 30));
        btnClose.setMinimumSize(new java.awt.Dimension(80, 30));
        btnClose.setPreferredSize(new java.awt.Dimension(80, 30));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        pnlClose.add(btnClose, java.awt.BorderLayout.EAST);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 7, 10);
        pnlContents.add(pnlClose, gridBagConstraints);

        getContentPane().add(pnlContents, "card2");

        pack();
    }//GEN-END:initComponents

    /**
     * Refreshes the current view (performs the check again)
     * @param evt the event that triggered this action
     */
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
      setBusy();
      //show report in table
      tm.setRowCount(0);

      Thread t = new Thread() {
        public void run() {
          TCCCReport rep = listener.getReport(FAuthorName, FAppName);
          showReport(rep);
          setDefaultCursor();
        }
      };

      t.start();
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * Opens the <Code>.wow</Code> file for this application
     * @evt the event that triggered this action
     */
    private void btnWowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWowActionPerformed
      setWaitCursor();

      Thread t = new Thread() {
        public void run() {
          listener.openWowFile(FAuthorName, FAppName);
          setDefaultCursor();
        }
      };

      t.start();
    }//GEN-LAST:event_btnWowActionPerformed

    /**
     * Opens the <Code>.gaf</Code> file for this application
     * @evt the event that triggered this action
     */
    private void btnGafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGafActionPerformed
      setWaitCursor();

      Thread t = new Thread() {
        public void run() {
          listener.openGafFile(FAuthorName, FAppName);
          setDefaultCursor();
        }
      };

      t.start();
    }//GEN-LAST:event_btnGafActionPerformed

    private void btnBifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGafActionPerformed
        setWaitCursor();

        Thread t = new Thread() {
          public void run() {
            listener.openBifFile(FAuthorName, FAppName);
            setDefaultCursor();
          }
        };

        t.start();
      }//GEN-LAST:event_btnGafActionPerformed

    /**
     * Closes the frame
     * Essentially a call to exitForm(evt)
     * @param evt the event that triggered this action
     */
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
      exitForm(null);
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * Closes the frame (dispose)
     * @param evt the event that triggered this action
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
      dispose();
    }//GEN-LAST:event_exitForm


    /**
     * Initializes components, which are not inited by the Sun One generated
     * method "initcomponents".
     */
    private void postInitComponents() {
      //set icons
      icnCorrect = new ImageIcon(getClass().getResource(AMtc.PICPATH + "correct.png"));
      icnIncorrect = new ImageIcon(getClass().getResource(AMtc.PICPATH + "incorrect.png"));

      //create report table
      Object[] columnnames = {"Concept", "Resource","Status"};
      tm = new DefaultTableModel(columnnames,0){
    		private static final long serialVersionUID = 1L;

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
      };
      tblReport = new JTable(tm);

  	  spnReport.setViewportView(tblReport);

  	  tblReport.setIntercellSpacing(new java.awt.Dimension(0,0));
  	  tblReport.setRowSelectionAllowed(true);
  	  tblReport.setShowGrid(false);
      tblReport.getTableHeader().setReorderingAllowed(false);

      int w = 570;
      int h = 600;
      Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
      setLocation(screenSize.width/2 - w/2, screenSize.height/2 - h/2);
      setSize(w, h);

      setTitle("CCCReport");
      lblAppName.setText(FAppName);
    }

    /**
     * Sets the statuslabel and cursor as busy
     */
    public void setBusy() {
      lblIcon.setIcon(null);
      lblIconText.setText("Checking resource existence...");
      setWaitCursor();
    }

    /**
     * Shows the specified CCCReport in tblReport
     * @param c the report to display
     */
    public void showReport(TCCCReport c) {
      rep = c;

      //show report in table
      tm.setRowCount(0);

      Vector v = c.getRepList();

      boolean allgood = true;

      for (int i = 0;i<v.size() ;i++ ) {
        TCCCReportPart part = (TCCCReportPart)v.get(i);

        Vector row = new Vector();

        row.add(part.getConceptName());
        row.add(part.getResourceName());
        row.add(part.isPassed()?"Success":"Failed");

        tm.addRow(row);

        allgood &= part.isPassed();
      }

      if (allgood) {
        lblIcon.setIcon(icnCorrect);
        lblIconText.setText("All resources are valid");
      }
      else {
        lblIcon.setIcon(icnIncorrect);
        lblIconText.setText("Some resources are missing");
      }
    }

    /**
     * Sets the cursor of this panel to the default wait cursor.
     */
    private void setWaitCursor() {
      setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    }

    /**
     * Sets the cursor of this panel to the default cursor.
     */
    private void setDefaultCursor() {
      setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }


    private ImageIcon icnCorrect;        //icon representing a valid report
    private ImageIcon icnIncorrect;      //icon representing an invalid report
    private JTable tblReport;            //table containing the report
    private DefaultTableModel tm;        //tablemodel for tblReport
    private String FAuthorName;          //name of the author that owns the app
    private String FAppName;             //application name for the report
    public  TCCCReport rep;              //the report that is currently displayed
    private TCCCPopupInterface listener; //TCCCPopup interface listener
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnWow;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnGaf;
    private javax.swing.JButton btnBif;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel lblAppName;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblIconText;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlClose;
    private javax.swing.JPanel pnlContents;
    private javax.swing.JPanel pnlReport;
    private javax.swing.JPanel pnlStatus;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane spnReport;
    // End of variables declaration//GEN-END:variables

}